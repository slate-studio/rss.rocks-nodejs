// Generated by CoffeeScript 1.7.1
(function() {
  var Archive, Cron, Firebase, Parser, Sender, job;

  Array.prototype.unique = function() {
    var key, output, value, _i, _ref, _results;
    output = {};
    for (key = _i = 0, _ref = this.length; 0 <= _ref ? _i < _ref : _i > _ref; key = 0 <= _ref ? ++_i : --_i) {
      output[this[key]] = this[key];
    }
    _results = [];
    for (key in output) {
      value = output[key];
      _results.push(value);
    }
    return _results;
  };

  Parser = require('../lib/parser');

  Archive = require('../lib/archive');

  Sender = require('../lib/sender');

  Firebase = require('firebase');

  Cron = (function() {
    function Cron() {
      this.firebaseAppName = 'rss-rocks';
      this.firebaseRef = new Firebase("https://" + this.firebaseAppName + ".firebaseio.com");
      this.usersRef = this.firebaseRef.child('users');
    }

    Cron.prototype.start = function() {
      return this.usersRef.on('value', (function(_this) {
        return function(snapshot) {
          _this.usersRef.off();
          _this.users = snapshot.val();
          _this.pullFeedsOutOfSubscriptions();
          return _this.sendEmailsWithNewPosts();
        };
      })(this));
    };

    Cron.prototype.pullFeedsOutOfSubscriptions = function() {
      var feeds, profile, uid, _fn, _ref;
      feeds = [];
      _ref = this.users;
      _fn = function(uid, profile) {
        var id, s, urls;
        urls = (function() {
          var _ref1, _results;
          _ref1 = profile.subscriptions;
          _results = [];
          for (id in _ref1) {
            s = _ref1[id];
            _results.push(s.url);
          }
          return _results;
        })();
        return Array.prototype.push.apply(feeds, urls);
      };
      for (uid in _ref) {
        profile = _ref[uid];
        _fn(uid, profile);
      }
      return this.feeds = feeds.unique();
    };

    Cron.prototype.sendEmailsWithNewPosts = function() {
      return new Parser(this.feeds, (function(_this) {
        return function(feedsAndPosts) {
          return new Archive(_this.firebaseRef, feedsAndPosts, function(feedsAndNewPosts) {
            return new Sender(_this.usersRef, feedsAndNewPosts, function() {
              console.log('done');
              return process.exit();
            });
          });
        };
      })(this));
    };

    return Cron;

  })();

  job = new Cron();

  job.start();

}).call(this);
